/*
 * This file is generated by jOOQ.
 */
package nl.rijksoverheid.mev.brp.brpv.generated.tables;


import nl.rijksoverheid.mev.brp.brpv.generated.Indexes;
import nl.rijksoverheid.mev.brp.brpv.generated.Keys;
import nl.rijksoverheid.mev.brp.brpv.generated.Public;
import nl.rijksoverheid.mev.brp.brpv.generated.tables.records.Lo3PlPersoonRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.Collection;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Lo3PlPersoon extends TableImpl<Lo3PlPersoonRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.lo3_pl_persoon</code>
     */
    public static final Lo3PlPersoon LO3_PL_PERSOON = new Lo3PlPersoon();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Lo3PlPersoonRecord> getRecordType() {
        return Lo3PlPersoonRecord.class;
    }

    /**
     * The column <code>public.lo3_pl_persoon.pl_id</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Long> PL_ID = createField(DSL.name("pl_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.persoon_type</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> PERSOON_TYPE = createField(DSL.name("persoon_type"), SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.stapel_nr</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> STAPEL_NR = createField(DSL.name("stapel_nr"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.volg_nr</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> VOLG_NR = createField(DSL.name("volg_nr"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.a_nr</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Long> A_NR = createField(DSL.name("a_nr"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.burger_service_nr</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Long> BURGER_SERVICE_NR = createField(DSL.name("burger_service_nr"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.voor_naam</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> VOOR_NAAM = createField(DSL.name("voor_naam"), SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.diak_voor_naam</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> DIAK_VOOR_NAAM = createField(DSL.name("diak_voor_naam"), SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.titel_predicaat</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> TITEL_PREDICAAT = createField(DSL.name("titel_predicaat"), SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.geslachts_naam_voorvoegsel</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> GESLACHTS_NAAM_VOORVOEGSEL = createField(DSL.name("geslachts_naam_voorvoegsel"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.geslachts_naam</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> GESLACHTS_NAAM = createField(DSL.name("geslachts_naam"), SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.diak_geslachts_naam</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> DIAK_GESLACHTS_NAAM = createField(DSL.name("diak_geslachts_naam"), SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.geboorte_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> GEBOORTE_DATUM = createField(DSL.name("geboorte_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.geboorte_plaats</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> GEBOORTE_PLAATS = createField(DSL.name("geboorte_plaats"), SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.geboorte_land_code</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> GEBOORTE_LAND_CODE = createField(DSL.name("geboorte_land_code"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.geslachts_aand</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> GESLACHTS_AAND = createField(DSL.name("geslachts_aand"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.naam_gebruik_aand</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> NAAM_GEBRUIK_AAND = createField(DSL.name("naam_gebruik_aand"), SQLDataType.CHAR(1), this, "");

    /**
     * The column
     * <code>public.lo3_pl_persoon.akte_register_gemeente_code</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> AKTE_REGISTER_GEMEENTE_CODE = createField(DSL.name("akte_register_gemeente_code"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.akte_nr</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> AKTE_NR = createField(DSL.name("akte_nr"), SQLDataType.VARCHAR(7), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.doc_gemeente_code</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> DOC_GEMEENTE_CODE = createField(DSL.name("doc_gemeente_code"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.doc_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> DOC_DATUM = createField(DSL.name("doc_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.doc_beschrijving</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> DOC_BESCHRIJVING = createField(DSL.name("doc_beschrijving"), SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.onderzoek_gegevens_aand</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> ONDERZOEK_GEGEVENS_AAND = createField(DSL.name("onderzoek_gegevens_aand"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.onderzoek_start_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> ONDERZOEK_START_DATUM = createField(DSL.name("onderzoek_start_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.onderzoek_eind_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> ONDERZOEK_EIND_DATUM = createField(DSL.name("onderzoek_eind_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.onjuist_ind</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> ONJUIST_IND = createField(DSL.name("onjuist_ind"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.geldigheid_start_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> GELDIGHEID_START_DATUM = createField(DSL.name("geldigheid_start_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.opneming_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> OPNEMING_DATUM = createField(DSL.name("opneming_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.relatie_start_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> RELATIE_START_DATUM = createField(DSL.name("relatie_start_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.relatie_start_plaats</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> RELATIE_START_PLAATS = createField(DSL.name("relatie_start_plaats"), SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.relatie_start_land_code</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> RELATIE_START_LAND_CODE = createField(DSL.name("relatie_start_land_code"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.relatie_eind_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> RELATIE_EIND_DATUM = createField(DSL.name("relatie_eind_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.relatie_eind_plaats</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> RELATIE_EIND_PLAATS = createField(DSL.name("relatie_eind_plaats"), SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.relatie_eind_land_code</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> RELATIE_EIND_LAND_CODE = createField(DSL.name("relatie_eind_land_code"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.relatie_eind_reden</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> RELATIE_EIND_REDEN = createField(DSL.name("relatie_eind_reden"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.verbintenis_soort</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> VERBINTENIS_SOORT = createField(DSL.name("verbintenis_soort"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.familie_betrek_start_datum</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Integer> FAMILIE_BETREK_START_DATUM = createField(DSL.name("familie_betrek_start_datum"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.vorig_a_nr</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Long> VORIG_A_NR = createField(DSL.name("vorig_a_nr"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.volgend_a_nr</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Long> VOLGEND_A_NR = createField(DSL.name("volgend_a_nr"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.rni_deelnemer</code>.
     */
    public final TableField<Lo3PlPersoonRecord, Short> RNI_DEELNEMER = createField(DSL.name("rni_deelnemer"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.lo3_pl_persoon.verdrag_oms</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> VERDRAG_OMS = createField(DSL.name("verdrag_oms"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.lo3_pl_persoon.registratie_betrekking</code>.
     */
    public final TableField<Lo3PlPersoonRecord, String> REGISTRATIE_BETREKKING = createField(DSL.name("registratie_betrekking"), SQLDataType.CHAR(1), this, "");

    private Lo3PlPersoon(Name alias, Table<Lo3PlPersoonRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private Lo3PlPersoon(Name alias, Table<Lo3PlPersoonRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>public.lo3_pl_persoon</code> table reference
     */
    public Lo3PlPersoon(String alias) {
        this(DSL.name(alias), LO3_PL_PERSOON);
    }

    /**
     * Create an aliased <code>public.lo3_pl_persoon</code> table reference
     */
    public Lo3PlPersoon(Name alias) {
        this(alias, LO3_PL_PERSOON);
    }

    /**
     * Create a <code>public.lo3_pl_persoon</code> table reference
     */
    public Lo3PlPersoon() {
        this(DSL.name("lo3_pl_persoon"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.LO3_PL_PERSOON_IDX_0, Indexes.LO3_PL_PERSOON_IDX_2);
    }

    @Override
    public UniqueKey<Lo3PlPersoonRecord> getPrimaryKey() {
        return Keys.LO3_PL_PERSOON_PK;
    }

    @Override
    public Lo3PlPersoon as(String alias) {
        return new Lo3PlPersoon(DSL.name(alias), this);
    }

    @Override
    public Lo3PlPersoon as(Name alias) {
        return new Lo3PlPersoon(alias, this);
    }

    @Override
    public Lo3PlPersoon as(Table<?> alias) {
        return new Lo3PlPersoon(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public Lo3PlPersoon rename(String name) {
        return new Lo3PlPersoon(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Lo3PlPersoon rename(Name name) {
        return new Lo3PlPersoon(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public Lo3PlPersoon rename(Table<?> name) {
        return new Lo3PlPersoon(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Lo3PlPersoon where(Condition condition) {
        return new Lo3PlPersoon(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Lo3PlPersoon where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Lo3PlPersoon where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Lo3PlPersoon where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Lo3PlPersoon where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Lo3PlPersoon where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Lo3PlPersoon where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Lo3PlPersoon where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Lo3PlPersoon whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Lo3PlPersoon whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
